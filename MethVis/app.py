from os import path
import os
import time
import base64

from collections import OrderedDict

import dash
import dash_bootstrap_components as dbc
from dash import Input, Output, dcc, html, Dash, dash_table, dcc
import dash_bio as dashbio

from scipy.stats import gaussian_kde
from sklearn.decomposition import PCA
import numpy as np
import pandas as pd

import plotly.graph_objs as go
import matplotlib.pyplot as plt
import plotly.express as px

############################################################################################
### Functions:
############################################################################################

def PlotPCA(autosomeProbes_df):
    
    dfPlot = autosomeProbes_df[samples].copy()
    dfPlot.dropna(inplace=True)
    sample_names_hover = list(dfPlot)
    df = dfPlot.T

    ### Compute data for max components number and no more than 10:
    maxComponentsNum = np.min([10, len(list(dfPlot))])
    pca = PCA(n_components=maxComponentsNum)
    components = pca.fit_transform(df)
    componentsExpl = list(pca.explained_variance_ratio_)

    ### Extract stats for first 2 components and save projection related files:
    PCsLabel = [f"PC{i+1}" for i in range(0, maxComponentsNum)]

    # Additionally generate a simple skree plot:
    PC_values = np.arange(pca.n_components_) + 1
    screePlot = go.Figure()

    screePlot.add_trace(
        go.Scatter(
            x=PC_values,
            y=pca.explained_variance_ratio_,
            line=dict(color="#e87d72")
        ))

    screePlot.add_trace(
        go.Bar(
            x=PC_values,
            y=pca.explained_variance_ratio_,
            marker_color="#ededed",
        ))

    screePlot.update_layout(template='plotly_white',
                      xaxis_title='Principal Component',
                      yaxis_title="Proportion of Variance Explained",
                      title="Scree Plot",
                      showlegend=False)
    
    
    total_var = np.sum(componentsExpl[:2]) * 100
    labels = {lab: f"PC {i} ({pcap*100:.2f}%)" for i, lab, pcap in zip([1,2], ["x","y"], componentsExpl[:2])}
    plottitle=f'Principal Component Analysis<br>Total Explained Variance by first 2 PCs: {total_var:.2f}%'

    pcaPlot = px.scatter(
            x=components[:,0], y=components[:,1],
            labels=labels,
            title=plottitle,
            template = "ggplot2",
#             width=900, 
#             height=850,
            hover_name=sample_names_hover
        )

    return screePlot, pcaPlot

def getDist(probes_USER, minVal=0, maxVal=1, steps=100, bandwidth=0.05):
    probes_df = pd.read_csv(probes_USER, sep="\t")
    probes_df.dropna(inplace=True)
    samples = [ elem for elem in list(probes_df) if elem not in ["probeID", "CpG_chrm", "CpG_beg", "CpG_end"]]

    x_grid = np.linspace(minVal, maxVal, steps)
    
    kdeIndexes = []
    kdeSamples = []
    kdeValues = []
    for sample in samples:
        kde = gaussian_kde(probes_df[sample], bw_method=bandwidth) ### This particular KDE was used because of its speed, based on: https://jakevdp.github.io/blog/2013/12/01/kernel-density-estimation/
        kde = kde.evaluate(x_grid)
        kdeValues += list(kde)
        kdeSamples += [sample]*steps
        kdeIndexes += list(x_grid)
    dfPlot = pd.DataFrame.from_dict({"Methylation level":kdeIndexes, "Kernel-density estimation":kdeValues, "sample":kdeSamples})
  
    return dfPlot

def getDistPlot(dfPlot, titleSuffix=""):
    distPlot = px.line(dfPlot,
                       x="Methylation level",
                       y="Kernel-density estimation",
                       color='sample',
                       color_discrete_sequence=px.colors.cyclical.IceFire_r, # more colors here: https://plotly.com/python/builtin-colorscales/
                       title="Methylation levels distribution{}".format(titleSuffix),
                       template = "ggplot2")
    return distPlot

############################################################################################
## Import data / user params:
############################################################################################

masterResultsDirectory = "."

if path.isdir(path.join(masterResultsDirectory, 'normalized_data')) == False:
    raise Exception("normalized_data directory not found file not found. Program execution was aborted.".format(autosomeProbes_USER))

autosomeProbes_USER = path.join(masterResultsDirectory, "normalized_data", "betaValues", "autosomes.beta.txt.sorted") # name of the file with all the probes (will be used for general stats, PCA, correlation etc.), e.g.: autosomes.beta.txt.sorted;
# probeID    CpG_chrm    CpG_beg    CpG_end    204776850055_R01C01    203293440221_R01C01    200973410143_R06C01    204809970139_R01C01    204813560104_R02C01    201004820204_R02C01    201004820067_R08C01    203845510037_R05C01    204076520172_R01C01    200989060140_R08C01
# cg14817997    chr1    10524    10526    0.56687655608693    0.55467154576929    0.909230942303322    0.750087583818079    0.899652876375209    0.943742932125278    0.86536202987842    0.732661246537243    0.778314640811073    0.840245367291464
# cg26928153    chr1    10847    10849    0.883219954648526    0.861500665370048    0.982468823423098    0.935849667908634    0.920582706766917    0.949167397020158    0.952768729641694    0.920156917041652    0.877191421197829    0.965123520863608
if path.exists(autosomeProbes_USER) == True:
    autosomeProbes_df = pd.read_csv(autosomeProbes_USER, sep="\t")
    autosomeProbes_df.dropna(inplace=True)
else:
    raise Exception("autosomeProbes_USER ({}) file not found. Program execution was aborted.".format(autosomeProbes_USER))
    
femaleProbes_USER = path.join(masterResultsDirectory, "normalized_data", "betaValues", "female.sexchr.beta.txt.sorted")
if path.exists(femaleProbes_USER) == True:
    femaleProbes_df = pd.read_csv(femaleProbes_USER, sep="\t")
    femaleProbes_df.dropna(inplace=True)
else:
    raise Exception("femaleProbes_df ({}) file not found. Program execution was aborted.".format(femaleProbes_df))

maleProbes_USER = path.join(masterResultsDirectory, "normalized_data", "betaValues", "male.sexchr.beta.txt.sorted")
if path.exists(maleProbes_USER) == True:
    maleProbes_df = pd.read_csv(femaleProbes_USER, sep="\t")
    maleProbes_df.dropna(inplace=True)
else:
    raise Exception("maleProbes_df ({}) file not found. Program execution was aborted.".format(maleProbes_df))

dmrParamSets = OrderedDict()
for subdir in next(os.walk('normalized_data'))[1]:
    if subdir.startswith("dmr_"):
        tmp = subdir.split("_")
        
        DMPsSig_USER = path.join(masterResultsDirectory, "normalized_data", "dmr_{}_{}_{}".format(int(tmp[1]), float(tmp[2]), float(tmp[3])), "autosomes.beta.txt.sorted_{}_{}_{}_findEpivariation.txt.sig".format(int(tmp[1]), float(tmp[3]), float(tmp[2]))) # all significant probe data, e.g.: autosomes.beta.txt.sorted.0.75.0.25.findEpivariation.txt.sig; few first lines of fuch input file:
        # probeID    CpG_chrm    CpG_beg    CpG_end    204776850055_R01C01    203293440221_R01C01    200973410143_R06C01    204809970139_R01C01    204813560104_R02C01    201004820204_R02C01    201004820067_R08C01    203845510037_R05C01    204076520172_R01C01    200989060140_R08C01    Quan0.25    Quan0.75    Sign_individuals_t0.1_n3_w1k_BOTH    Sign_direction_t0.1_n3_w1k_BOTH    Sign_window_t0.1_n3_w1k_BOTH
        # cg25107893    chr1    911600    911602    0.27392065344224    0.290393013100437    0.215641444383959    0.472077438570365    0.277891816920943    0.254102728047741    0.325795112861559    0.341956697065575    0.324045930428909    0.206778054271833    0.206778054271833    0.324045930428909    204809970139_R01C01    HYPER    1
        # cg05505459    chr1    911994    911996    0.221439483375644    0.155918409279939    0.39571441110636    0.593293209297322    0.266842752663786    0.145398798204745    0.466824152220887    0.278474322963381    0.39353813359223    0.237538904965986    0.145398798204745    0.39353813359223    204809970139_R01C01    HYPER    1
        if path.exists(DMPsSig_USER) == False:
            raise Exception("DMPsSig_USER ({}) file not found. Program execution was aborted.".format(DMPsSig_USER))
        
        DMRsSig_USER = path.join(masterResultsDirectory, "normalized_data", "dmr_{}_{}_{}".format(int(tmp[1]), float(tmp[2]), float(tmp[3])), "autosomes.beta.txt.sorted_{}_{}_{}_findEpivariation.txt.sig_dmr.txt".format(int(tmp[1]), float(tmp[3]), float(tmp[2]))) # e.g.: autosomes.beta_dmr.txt.sorted.0.75.0.25.findEpivariation.txt.sig; few first lines of fuch input file:
        # Chr_DMR    Start_DMR    End_DMR    Cohort    EpiInd    direction
        # chr1    911600    912056    claflamm    204809970139_R01C01    MAX
        # chr1    1108520    1109487    claflamm    200989060140_R08C01    MAX
        if path.exists(DMRsSig_USER) == False:
            raise Exception("DMRsSig_USER ({}) file not found. Program execution was aborted.".format(DMRsSig_USER))
        
        dmrParamSets[(int(tmp[1]), float(tmp[2]), float(tmp[3]), DMPsSig_USER, DMRsSig_USER)] = 1
        print("Detected dmr_{}_{}_{} results collection".format(int(tmp[1]), float(tmp[3]), float(tmp[2])))


# for now, for testing purposes i am setting the analysis to include only one "set" of results (anyhow we do not have more at the time), i.e. i am using the very last one loaded in.

DMPsSig_df = pd.read_csv(DMPsSig_USER, sep="\t")
DMRsSig_df = pd.read_csv(DMRsSig_USER, sep="\t")
DMRsSig_df["id"] = DMRsSig_df[['Chr_DMR','Start_DMR', 'End_DMR']].apply(lambda x: "{}:{}-{}".format(x[0], x[1], x[2]), axis=1)
DMRsSig_df.drop(columns=["Cohort"], inplace=True)
DMRsSig_df.set_index("id", inplace=True)
DMRsSig_df["id"] = DMRsSig_df.index

InputFilesDF = pd.DataFrame(
    {
        " ": ["Pipeline execution log file", "All Probes file", "Significant Differentially Methylated Probes file", "Significant Differentially Methylated Regions file"],
        "Loaded file": ["e.g. nextflow_run.log", autosomeProbes_USER, DMPsSig_USER, DMRsSig_USER],
    }
)
InputFilesTable = dbc.Table.from_dataframe(InputFilesDF, striped=True, bordered=True, hover=True)

# Check if the summary file with distributions exists in the output directory, if not, generate it:
samplesKDE_IN = path.join(masterResultsDirectory, "normalized_data", "betaValues", "samplesKDE_all.tsv")
if path.exists(samplesKDE_IN) == True:
    samplesKDE_all_df = pd.read_csv(samplesKDE_IN, sep="\t")
else:
    samplesKDE_all_df = getDist(autosomeProbes_USER)
    samplesKDE_all_df.to_csv(samplesKDE_IN, sep="\t", index=False)

samplesKDE_IN = path.join(masterResultsDirectory, "normalized_data", "betaValues", "samplesKDE_female.tsv")
if path.exists(samplesKDE_IN) == True:
    samplesKDE_F_df = pd.read_csv(samplesKDE_IN, sep="\t")
else:
    samplesKDE_F_df = getDist(femaleProbes_USER)
    samplesKDE_F_df.to_csv(samplesKDE_IN, sep="\t", index=False)

samplesKDE_IN = path.join(masterResultsDirectory, "normalized_data", "betaValues", "samplesKDE_male.tsv")
if path.exists(samplesKDE_IN) == True:
    samplesKDE_M_df = pd.read_csv(samplesKDE_IN, sep="\t")
else:
    samplesKDE_M_df = getDist(maleProbes_USER)
    samplesKDE_M_df.to_csv(samplesKDE_IN, sep="\t", index=False)

# Get list of samples based on autosomeProbes_df:
samples = [ elem for elem in list(autosomeProbes_df) if elem not in ["probeID", "CpG_chrm", "CpG_beg", "CpG_end"]]


## Import logo:

# BHLogo_content = dbc.CardImg(src="assets/sj-hackathon-logo.svg", style={'height':'50%'}, top=True)
BHLogo_content = dbc.CardImg(src="data:image/png;base64, ", style={'height':'50%'}, top=True)
loremIpsum = "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum."

## Set up server to bootstrap template:
app = Dash(external_stylesheets=[dbc.themes.BOOTSTRAP, dbc.icons.FONT_AWESOME])

## Read in the params from pipeline run
outfilePrefix = "test" # i.e. there will be some analysis prefix imported later, now i dont have this config file yet so i just hard code the "test" here for now


############################################################################################
## Calculations required for the tabs:
############################################################################################

## TAB: Quality Controls --- PCA related:
screePlot, pcaPlot = PlotPCA(autosomeProbes_df)
distPlotAll = getDistPlot(samplesKDE_all_df, " - Autosomes")
distPlotF = getDistPlot(samplesKDE_F_df, " - Female sex chromosome")
distPlotM = getDistPlot(samplesKDE_M_df, " - Male sex chromosome")


############################################################################################
## Configure content of the TABS - the core part of the final app.py:
############################################################################################

tab_upload = dbc.Card(
    dbc.CardBody(
        [
            dcc.Markdown('''

#### Data upload

Currently, the data upload functionality was not yet implemented, because the main purpose of this final part of the methylation array analysis pipeline, was within the scope of this BioHakathon, to create a tool for exploration of the results. In the future, once the pipeline will actually be deployed for the general audience and investigators, here users will be able to upload the required files:

1. ...
2. ...
3. ...

click `submit` button and enjoy the exploration of their results.


''')
        ]
    ),
    className="mt-3",
)


tab_data = dbc.Card(
    dbc.CardBody(
        [
            dbc.Accordion(
                [
                    dbc.AccordionItem(
                        [
                            html.P("In this section we should include the list of all parameters used to run the piepline + any other useful log information (e.g. start and end time etc.). We could also list here the current working directory or the directory with the results, whichever would be more appropriate"),
                            dbc.Alert("Team2: add to the pipeline some sort of record of these running parameters that could be displayed here", color="danger")
                        ],
                        title="Pipeline running parameters",
                    ),
                    dbc.AccordionItem(
                        [
                            html.P("Here is the list of all files uploaded by the user to enable the data exploration. The files are:"),
                            InputFilesTable
                        ],
                        title="User uploaded files",
                    ),
                    dbc.AccordionItem(
                        "This is the content of the third section",
                        title="Other info about ",
                    ),
                ],
                #always_open=True, # activate/uncomment this if you wish it was possible to open multiple panels at the same time
            )
        ]
    ),
    className="mt-3",
)

tab_methods = dbc.Card(
    dbc.CardBody(
        [
            dcc.Markdown('''

#### Methods

Here we provide methods description, add any neccesary details and schematics etc. We can use Markdown, for which the syntax's cheatsheet might be found [here](https://www.markdownguide.org/cheat-sheet/). 

            ''')
        ]
    ),
    className="mt-3",
)

tab_qc = dbc.Card(
    dbc.CardBody(
        [
            dcc.Markdown('''

#### Quality controls (QC)

Here we provide the overview of the quality controls regarding your samples.

            '''),
            html.Hr(),
            dbc.Row([
                dbc.Col([
                    dcc.Graph(figure=pcaPlot),
                    dcc.Markdown('''Principal component analysis (PCA) is a technique for reducing the dimensionality of big datasets, increasing interpretability but at the same time minimizing information loss. [Source and more explanation](https://royalsocietypublishing.org/doi/10.1098/rsta.2015.0202).'''),
                    ], md=6),
            
                dbc.Col([
                    dcc.Graph(figure=screePlot),
                    dcc.Markdown('''A scree plot is a line plot of the eigenvalues of factors or principal components in an analysis and is used to determine the number of factors to retain in an exploratory factor analysis (FA) or principal components to keep in a principal component analysis (PCA). [Source and more explanation](https://en.wikipedia.org/wiki/Scree_plot).'''),
                    ], md=6),
                ]),
            html.Hr(),
            dbc.Row(dcc.Graph(figure=distPlotAll)),
            dbc.Row(dcc.Graph(figure=distPlotF)),
            dbc.Row(dcc.Graph(figure=distPlotM)),
            dbc.Row(dcc.Markdown('''The representation of a kernel-density estimate of the probe methylation levels (Beta-values) of all samples was calculated using [Gaussian kernels](https://docs.scipy.org/doc/scipy/reference/generated/scipy.stats.gaussian_kde.html). Typically, the distribution of those methylation values is bimodal, but it might depend on the donor sex, the genomic context or developmental stage (e.g. PMID: [27490343](https://pubmed.ncbi.nlm.nih.gov/27490343/), PMID: [24713664](https://pubmed.ncbi.nlm.nih.gov/24713664/) or PMID: [31399642](https://pubmed.ncbi.nlm.nih.gov/31399642/)). It might also indicate that there was some issue with sequencing. Therefore, if above one cannot see the bimodal distribution for some/all samples, its worth to consider the potential explanations of this.''')),
            html.Hr(),
            
            
        ]
    ),
    className="mt-3",
)


PAGE_SIZE = 15
tab_ev = dbc.Card(
    dbc.CardBody(
        [
            dcc.Markdown('''

Here you may explore the contents of the `{}` file.

            '''.format(DMRsSig_USER)),
            
            dash_table.DataTable(
                id='datatable-row-ids',
                columns=[
                    {'name': i, 'id': i, 'deletable': False} for i in DMRsSig_df.columns
                    # omit the id column
                    if i != 'id'
                ],
                data=DMRsSig_df.to_dict('records'),
                editable=False,
                filter_action="native",
                sort_action="native",
                sort_mode='multi',
                row_selectable='multi',
                row_deletable=False,
                selected_rows=[],
                page_action='native',
                page_current=0,
                page_size=10,
            ),
            
            dcc.Markdown('''

The above data table may be filtered using expressions like `="chr1"` or `>1000000`. More about filtering syntax may be found [here](https://dash.plotly.com/datatable/filtering). Note, that filtering of the above table will result in updating the plots below.

            '''),
            
            # dbc.Alert(
#                 [
#                     html.I(className="bi bi-info-circle-fill me-2"),
#                     """The above data table may be filtered using expressions like ="chr1" or >1000000. More about filtering syntax may be found """,
#                     html.A("here", href="https://dash.plotly.com/datatable/filtering", className="alert-link"), 
#                     """. Filtering of the above table will result in updating the plots below.""",
#                 ],
#                 color="info",
#                 className="d-flex align-items-center",
#             ),
            
#             dbc.Toast([html.P('Note, that the above data table may be filtered using expressions like ="chr1" or >1000000. More about filtering syntax may be found <a href=https://dash.plotly.com/datatable/filtering>here</a>. Filtering of the above table will result in updating the plots below.', className="mb-0")], header="Data table filtering",),
            html.Div(id='datatable-row-ids-container')
        ]
    ),
    className="mt-3",
)
@app.callback(
    Output('datatable-row-ids-container', 'children'),
    Input('datatable-row-ids', 'derived_virtual_row_ids'),
    Input('datatable-row-ids', 'selected_row_ids'),
    Input('datatable-row-ids', 'active_cell'))
def update_graphs(row_ids, selected_row_ids, active_cell):
    # https://dash.plotly.com/datatable/interactivity
    # When the table is first rendered, `derived_virtual_data` and
    # `derived_virtual_selected_rows` will be `None`. This is due to an
    # idiosyncrasy in Dash (unsupplied properties are always None and Dash
    # calls the dependent callbacks when the component is first rendered).
    # So, if `rows` is `None`, then the component was just rendered
    # and its value will be the same as the component's dataframe.
    # Instead of setting `None` in here, you could also set
    # `derived_virtual_data=df.to_rows('dict')` when you initialize
    # the component.
    selected_id_set = set(selected_row_ids or [])
    
    if row_ids is None:
        dff = DMRsSig_df
        # pandas Series works enough like a list for this to be OK
        row_ids = DMRsSig_df["id"]#df['id']
    else:
        dff = DMRsSig_df.loc[row_ids]

    active_row_id = active_cell['row_id'] if active_cell else None
    
    
    series_DMRsNum = dff['EpiInd'].value_counts(ascending=True)
    fig_DMRsNum = px.bar(x=series_DMRsNum,
             y=series_DMRsNum.index,
             template = "ggplot2",
             title="Differentially methylated regions per sample",
             labels={
                     "x": "Number of DMRs",
                     "y": "Sample",
                 },
             )
    
    
    series_hyperHypoPie = dff['direction'].value_counts(ascending=True)
    fig_hyperHypoPie = go.Figure(data=[go.Pie(labels=series_hyperHypoPie.index,
                             values=series_hyperHypoPie,
                             textinfo='label+percent',
                             insidetextorientation='radial',
                             hole=.7,
                             title="Number of Hyper/Hypo<br>methylated DMRs"
                            )])
    
    series_perChrm = dff['Chr_DMR'].value_counts(ascending=True)
    fig_perChrm = go.Figure(data=[go.Pie(labels=series_perChrm.index,
                             values=series_perChrm,
                             hole=.7,
                             title="Number of DMRs<br>per chromosome"
                            )])
    
    
    
    
    return [dbc.Row([
                dcc.Graph(
                    id='fig_DMRsNum',
                    figure=fig_DMRsNum,),
                ]),
            dbc.Row([
                dbc.Col([
                    dcc.Graph(
                        id='fig_hyperHypoPie',
                        figure=fig_hyperHypoPie,)
                    ], md=6),
                dbc.Col([
                    dcc.Graph(
                        id='fig_perChrm',
                        figure=fig_perChrm,)
                    ], md=6),
                ]
                
            )]


############################################################################################
### App Layout:
############################################################################################

tabs = dbc.Tabs(
    [
        dbc.Tab(tab_upload, label="Data upload"),#, disabled=True),
        dbc.Tab(tab_methods, label="Methods"),
        dbc.Tab(tab_data, label="Input data and parameters"),
        dbc.Tab(tab_qc, label="Quality controls"),
        dbc.Tab(tab_ev, label="Data exploration and visualization")
    ]
)

app.layout = dbc.Container(
    [
        dbc.Row(
            [
                dbc.Col(BHLogo_content, md=3),
                dbc.Col([
                    html.H3("Project 2: Methylation array analysis pipeline"),
                    html.P(loremIpsum)]
                    , md=9),
            ],
            align="center",
        ),
        
        html.Hr(),
        tabs
    ]
)



# app.layout = dash_table.DataTable(df.to_dict('records'), [{"name": i, "id": i} for i in df.columns])
# striped=True, bordered=True, hover=True
# https://dash-bootstrap-components.opensource.faculty.ai/docs/components/table/

if __name__ == '__main__':
    app.run_server(debug=True, port=8051)





